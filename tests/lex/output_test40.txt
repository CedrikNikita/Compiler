1	147	identifier	LSQ_HandleT	LSQ_HandleT
1	159	identifier	LSQ_CreateSequence	LSQ_CreateSequence
1	177	separator	(	(
1	178	identifier	void	void
1	182	separator	)	)
1	183	separator	{	{
2	5	identifier	ArrayT	ArrayT
2	11	operation	*	*
2	13	identifier	a	a
2	15	operation	=	=
2	17	identifier	malloc	malloc
2	23	separator	(	(
2	24	operation	sizeof	sizeof
2	30	separator	(	(
2	31	identifier	ArrayT	ArrayT
2	37	separator	)	)
2	38	separator	)	)
2	39	separator	;	;
3	5	identifier	a	a
3	6	operation	->	->
3	8	identifier	array	array
3	14	operation	=	=
3	16	identifier	malloc	malloc
3	22	separator	(	(
3	23	identifier	init	init
3	28	operation	*	*
3	30	operation	sizeof	sizeof
3	36	separator	(	(
3	37	identifier	LSQ_BaseTypeT	LSQ_BaseTypeT
3	50	separator	)	)
3	51	separator	)	)
3	52	separator	;	;
4	5	identifier	a	a
4	6	operation	->	->
4	8	identifier	size	size
4	13	operation	=	=
4	15	int	0	0
4	16	separator	;	;
5	5	identifier	a	a
5	6	operation	->	->
5	8	identifier	real_size	real_size
5	18	operation	=	=
5	20	identifier	init	init
5	24	separator	;	;
6	5	keyword	return	return
6	12	identifier	a	a
6	13	separator	;	;
7	1	separator	}	}
9	66	identifier	LSQ_HandleT	LSQ_HandleT
9	78	identifier	LSQ_ResizeDec	LSQ_ResizeDec
9	91	separator	(	(
9	92	identifier	LSQ_HandleT	LSQ_HandleT
9	104	identifier	handle	handle
9	110	separator	)	)
9	111	separator	{	{
10	5	identifier	ArrayT	ArrayT
10	11	operation	*	*
10	13	identifier	a	a
10	15	operation	=	=
10	17	separator	(	(
10	18	identifier	ArrayT	ArrayT
10	24	operation	*	*
10	25	separator	)	)
10	26	identifier	handle	handle
10	32	separator	;	;
11	5	keyword	if	if
11	8	separator	(	(
11	9	identifier	a	a
11	10	operation	->	->
11	12	identifier	size	size
11	17	operation	+	+
11	19	identifier	init	init
11	24	operation	<	<
11	26	identifier	a	a
11	27	operation	->	->
11	29	identifier	real_size	real_size
11	38	operation	/	/
11	39	identifier	resize	resize
11	45	separator	)	)
11	46	separator	{	{
12	9	identifier	a	a
12	10	operation	->	->
12	12	identifier	real_size	real_size
12	22	operation	=	=
12	24	identifier	a	a
12	25	operation	->	->
12	27	identifier	real_size	real_size
12	36	operation	/	/
12	37	identifier	resize	resize
12	43	separator	;	;
13	9	keyword	return	return
13	16	identifier	realloc	realloc
13	23	separator	(	(
13	24	identifier	a	a
13	25	operation	->	->
13	27	identifier	array	array
13	32	separator	,	,
13	34	identifier	a	a
13	35	operation	->	->
13	37	identifier	real_size	real_size
13	46	separator	)	)
13	47	separator	;	;
14	5	separator	}	}
15	5	keyword	else	else
15	10	keyword	return	return
15	17	identifier	a	a
15	18	operation	->	->
15	20	identifier	array	array
15	25	separator	;	;
16	1	separator	}	}
18	66	identifier	LSQ_HandleT	LSQ_HandleT
18	78	identifier	LSQ_ResizeInc	LSQ_ResizeInc
18	91	separator	(	(
18	92	identifier	LSQ_HandleT	LSQ_HandleT
18	104	identifier	handle	handle
18	110	separator	)	)
18	111	separator	{	{
19	5	identifier	ArrayT	ArrayT
19	11	operation	*	*
19	13	identifier	a	a
19	15	operation	=	=
19	17	separator	(	(
19	18	identifier	ArrayT	ArrayT
19	24	operation	*	*
19	25	separator	)	)
19	26	identifier	handle	handle
19	32	separator	;	;
20	5	keyword	if	if
20	7	separator	(	(
20	8	identifier	a	a
20	9	operation	->	->
20	11	identifier	size	size
20	16	operation	==	==
20	19	identifier	a	a
20	20	operation	->	->
20	22	identifier	real_size	real_size
20	31	separator	)	)
20	32	separator	{	{
21	9	identifier	a	a
21	10	operation	->	->
21	12	identifier	real_size	real_size
21	22	operation	=	=
21	24	identifier	a	a
21	25	operation	->	->
21	27	identifier	real_size	real_size
21	37	operation	*	*
21	39	identifier	resize	resize
21	45	separator	;	;
22	9	keyword	return	return
22	16	identifier	realloc	realloc
22	23	separator	(	(
22	24	identifier	a	a
22	25	operation	->	->
22	27	identifier	array	array
22	32	separator	,	,
22	34	identifier	a	a
22	35	operation	->	->
22	37	identifier	real_size	real_size
22	46	separator	)	)
22	47	separator	;	;
23	5	separator	}	}
24	5	keyword	else	else
24	10	keyword	return	return
24	17	identifier	a	a
24	18	operation	->	->
24	20	identifier	array	array
24	25	separator	;	;
25	1	separator	}	}
